/**************************************************************************************************\
 * This file is part of the Voodoo Shader Framework, a comprehensive shader support library.
 * Copyright (c) 2010-2011 by Sean Sube
 *
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License as published by the Free Software Foundation; either version 2 of the 
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; 
 * if  not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, 
 * Boston, MA  02110-1301 US
 *
 * Support and more information may be found at http://www.voodooshader.com, or by contacting the
 * developer at peachykeen@voodooshader.com
\**************************************************************************************************/

import "oaidl.idl";
import "ocidl.idl";

// Enums and such
typedef [v1_enum, helpstring("Texture Formats")]
enum {
    TF_Unknown  = 0x00,
    TF_RGB5     = 0x01,
    TF_RGB8     = 0x03,
    TF_RGBA8    = 0x04,
    TF_RGB10A2  = 0x05,
    TF_RGBA16F  = 0x10,
    TF_RGBA32F  = 0x11,
    TF_D16      = 0x40,
    TF_D32      = 0x41,
    TF_Max      = 0x7FFFFFFF
} TextureFormat;

typedef [v1_enum, helpstring("Parameter Types")]
enum {
    PT_Unknown      = 0x00,
    PT_Float1       = 0x11,
    PT_Float2       = 0x12,
    PT_Float3       = 0x13,
    PT_Float4       = 0x14,
    PT_Float1x1     = 0x11,
    PT_Float1x2     = 0x12,
    PT_Float1x3     = 0x13,
    PT_Float1x4     = 0x14,
    PT_Float2x1     = 0x21,
    PT_Float2x2     = 0x22,
    PT_Float2x3     = 0x23,
    PT_Float2x4     = 0x24,
    PT_Float3x1     = 0x31,
    PT_Float3x2     = 0x32,
    PT_Float3x3     = 0x33,
    PT_Float3x4     = 0x34,
    PT_Float4x1     = 0x41,
    PT_Float4x2     = 0x42,
    PT_Float4x3     = 0x43,
    PT_Float4x4     = 0x44,
    PT_Sampler1D    = 0x101,
    PT_Sampler2D    = 0x102,
    PT_Sampler3D    = 0x103,
    PT_Struct       = 0x1000,
    PT_Max          = 0x7FFFFFFF
} ParameterType;

typedef [v1_enum, helpstring("Parameter Categories")]
enum {
    PC_Unknown  = 0x00,
    PC_Float    = 0x01,
    PC_Sampler  = 0x02,
    PC_Struct   = 0x04,
    PC_Max = 0x7FFFFFFF
} ParameterCategory;

typedef [v1_enum, helpstring("Shader Program Stages")]
enum {
    PS_Unknown  = 0x00,
    PS_Vertex   = 0x01,
    PS_Fragment = 0x02,
    PS_Geometry = 0x03,
    PS_Domain   = 0x04,
    PS_Hull     = 0x05,
    PS_Max = 0x7FFFFFFF
} ProgramStage;
    
typedef [v1_enum, helpstring("Texture Stages")]
enum {
    TS_Unknown  = 0x00,
    TS_Shader   = 0x01,
    TS_Pass     = 0x02,
    TS_Max      = 0x7FFFFFFF
} TextureStage;
    
typedef [v1_enum, helpstring("File Access Modes")]
enum {
    FM_Unknown  = 0x00,
    FM_Read     = 0x01,
    FM_Write    = 0x02,
    FM_Max      = 0x7FFFFFFF
} FileOpenMode;

typedef [v1_enum, helpstring("Log Levels")]
enum {
    LL_Unknown      = 0x00,
    LL_Debug        = 0x01,
    LL_Info         = 0x02,
    LL_Warning      = 0x04,
    LL_Error        = 0x08,
    LL_External     = 0x10,
    LL_Module       = 0x40,
    LL_Framework    = 0x80,
    LL_Internal     = 0x82,
    LL_Initial      = 0xFE,
    LL_All          = 0xFF,
    LL_Max          = 0x7FFFFFFF
} LogLevel;

typedef [v1_enum, helpstring("Variable Parsing Modifiers")]
enum {
    PF_None             = 0x0000,
    PF_SingleSlash      = 0x0001,
    PF_SlashOnly        = 0x0002,
    PF_BackslashOnly    = 0x0004,
    PF_Lowercase        = 0x0010,
    PF_Uppercase        = 0x0020,
    PF_VarName          = 0x0100,
    PF_Max              = 0x7FFFFFFF
} ParseFlags;

typedef [v1_enum, helpstring("Variable Type")]
enum {
    VT_Normal   = 0x00,
    VT_State    = 0x01,
    VT_System   = 0x10,
    VT_Max      = 0x7FFFFFFF
} VariableType;

typedef [helpstring("Core Intialization Struct")]
struct
{
    BSTR GlobalRoot;
    BSTR LocalRoot;
    BSTR RunRoot;
    BSTR Target;
    BSTR Loader;
    BSTR Config;
} InitParams;

typedef [helpstring("Texture Description")]
struct
{
    int Width;
    int Height;
    int Depth;
    boolean Mipmaps;
    TextureFormat Format;
} TextureDesc;

typedef [helpstring("Texture Region Description")]
struct
{
    int Width;
    int Height;
    int Depth;
    boolean Mipmaps;
    TextureFormat Format;
    int OffX;
    int OffY;
    int OffZ;
} TextureRegion;

typedef [helpstring("Module Version")]
struct
{
    BSTR Name;
    int Major;
    int Minor;
    long Patch;
    long Rev;
    boolean Debug;
} VersionStruct;

typedef [helpstring("3-component float vector")]
struct  
{
    float X, Y;
} float2;

typedef [helpstring("3-component float vector")]
struct  
{
    float X, Y, Z;
} float3;

typedef [helpstring("4-component float vector")]
struct  
{
    float X, Y, Z, W;
} float4;

typedef [helpstring("Pre-transformed vertex structure")]
struct
{
    float3 Position;
    float Winding;
    float2 TexCoord;
} VertexStruct;

typedef [helpstring("Shader-compatible light structure")]
struct  
{
    int Type;
    float4 Diffuse;
    float4 Specular;
    float4 Ambient;
    float3 Position;
    float3 Direction;
    float Range;
    float Falloff;
    float3 Attenuation;
    float Theta;
    float Phi;
} LightStruct;

typedef struct
{
    int unused;
} Function;
typedef [ptr] Function * FunctionPtr;


typedef DWORD EnumType;

// --------------------------------------------------
// Interface forward-declarations.
interface IVoodooAdapter;
interface IVoodooCore;
interface IVoodooFile;
interface IVoodooFileSystem;
interface IVoodooHookSystem;
interface IVoodooImage;
interface IVoodooLogger;
interface IVoodooParameter;
interface IVoodooPass;
interface IVoodooShader;
interface IVoodooParser;
interface IVoodooTechnique;
interface IVoodooTexture;

// --------------------------------------------------
// Global interfaces (generic framework).
[
	object,
	uuid(6D183074-9127-4615-8366-02587BAFE38C),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooCore : IDispatch{
    [id(1)] HRESULT Initialize([in] const InitParams pParams);
    [propget, id(2)] HRESULT Parser([out, retval] IVoodooParser ** ppParser);
    [propget, id(3)] HRESULT HookSystem([out, retval] IVoodooHookSystem ** ppHookSystem);
    [propget, id(4)] HRESULT FileSystem([out, retval] IVoodooFileSystem ** ppFileSystem);
    [propget, id(5)] HRESULT Adapter([out, retval] IVoodooAdapter ** ppAdapter);
    [propget, id(6)] HRESULT Logger([out, retval] IVoodooLogger ** ppLogger);
    [propget, id(7)] HRESULT Config([out, retval] IXMLDOMDocument ** ppConfig);
    [propget, id(8)] HRESULT CgContext([out, retval] VARIANT * pCgContext);
    [propput, id(8)] HRESULT CgContext([in] VARIANT CgContext);
    [vararg, id(10)] HRESULT CreateShader([in] IVoodooFile * pFile, [in] SAFEARRAY(VARIANT) pArgs, [out, retval] IVoodooShader ** ppShader);
    [id(11)] HRESULT CreateParameter([in] BSTR pName, [in] EnumType Type, [out, retval] IVoodooParameter ** ppParameter);
    [id(12)] HRESULT CreateTexture([in] BSTR pName, [in] VARIANT Data, [out, retval] IVoodooTexture ** ppTexture);
    [id(13)] HRESULT GetParameter([in] BSTR pName, [out, retval] IVoodooParameter ** ppParameter);
    [id(14)] HRESULT GetTexture([in] BSTR pName, [out, retval] IVoodooTexture ** ppTexture);
    [id(15)] HRESULT RemoveTexture([in] BSTR pName);
    [id(16)] HRESULT GetStageTexture([in] EnumType Stage, [out, retval] IVoodooTexture ** ppTexture);
    [id(17)] HRESULT SetStageTexture([in] EnumType Stage, [in] IVoodooTexture * pTexture);
};
[
	object,
	uuid(B375BC6B-5A6C-4B8B-888B-A937BA3814FD),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooParser : IDispatch{
    [id(1)] HRESULT AddVariable([in] BSTR pName, [in] BSTR pValue, [in, defaultvalue(VT_Normal)] EnumType System);
    [id(2)] HRESULT RemoveVariable([in] BSTR pName);
    [id(3)] HRESULT Parse([in] BSTR pString, [in, defaultvalue(PF_None)] EnumType Flags, [out, retval] LPBSTR pParsed);
};
[
	object,
	uuid(8C26CEBA-45AD-4382-BEA9-EDBB2F446B21),
	dual,
	nonextensible,
	pointer_default(unique)
]

// --------------------------------------------------
// Shader interfaces
interface IVoodooShader : IDispatch{
    [propget, id(1)] HRESULT Name([out, retval] LPBSTR ppName);
    [propget, id(2)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [propget, id(3)] HRESULT TechniqueCount([out, retval] int * pCount);
    [id(4)] HRESULT GetTechnique([in] int Number, [out, retval] IVoodooTechnique ** ppTechnique);
    [propget, id(5)] HRESULT DefaultTechnique([out, retval] IVoodooTechnique ** ppTechnique);
    [propput, id(5)] HRESULT DefaultTechnique([in] IVoodooTechnique * pTechnique);
    [propget, id(7)] HRESULT ParameterCount([out, retval] int * pCount);
    [id(8)] HRESULT GetParameter([in] int Number, [out, retval] IVoodooParameter ** ppParameter);
    [propget, id(9)] HRESULT CgShader([out, retval] VARIANT * pCgShader);
};

[
	object,
	uuid(B0D5E12B-2A58-4AF3-BD0A-A41A3968AB36),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooTechnique : IDispatch{
    [propget, id(1)] HRESULT Name([out, retval] LPBSTR ppName);
    [propget, id(2)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [propget, id(3)] HRESULT Target([out, retval] IVoodooTexture ** ppTexture);
    [propget, id(4)] HRESULT PassCount([out, retval] int * pCount);
    [id(5)] HRESULT GetPass([in] int Number, [out, retval] IVoodooPass ** ppPass);
    [propget, id(6)] HRESULT Shader([out, retval] IVoodooShader ** ppShader);
    [propget, id(7)] HRESULT CgTechnique([out, retval] VARIANT * pCgTechnique);
};
[
	object,
	uuid(7C231D9E-146B-40CF-9F39-A4D3513DD7F7),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooPass : IDispatch{
    [propget, id(1)] HRESULT Name([out, retval] LPBSTR ppName);
    [propget, id(2)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [propget, id(3)] HRESULT Target([out, retval] IVoodooTexture ** ppTexture);
    [propget, id(4)] HRESULT Shader([out, retval] IVoodooShader ** ppShader);
    [propget, id(5)] HRESULT Technique([out, retval] IVoodooTechnique ** ppTechnique);
    [id(6)] HRESULT GetCgProgram([in] EnumType Stage, [out, retval] VARIANT * pProgram);
    [propget, id(7)] HRESULT CgPass([out, retval] VARIANT * pCgPass);
};

// --------------------------------------------------
// Shader-related data containers.
[
	object,
	uuid(164A33FD-E80D-4666-AE93-298B33020986),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooTexture : IDispatch{
    [propget, id(1)] HRESULT Name([out, retval] LPBSTR ppName);
    [propget, id(2)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [propget, id(3)] HRESULT Data([out, retval] VARIANT * pData);
};
[
	object,
	uuid(6AB220A5-4579-441E-9060-4AF7535D6601),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooParameter : IDispatch{
    [propget, id(1)] HRESULT Name([out, retval] LPBSTR ppName);
    [propget, id(2)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [propget, id(3)] HRESULT Type([out, retval] EnumType * pType);
    [propget, id(4)] HRESULT Virtual([out, retval] boolean * pVirtual);
    [id(6)] HRESULT AttachParameter([in] IVoodooParameter * pParameter);
    [propget, id(7)] HRESULT Components([out, retval] int * pComponents);
    [propget, id(8)] HRESULT SamplerValue([out, retval] IVoodooTexture ** ppTexture);
    [propput, id(8)] HRESULT SamplerValue([in] IVoodooTexture * pTexture);
    [propget, id(10)] HRESULT ScalarValue([out, retval] SAFEARRAY(float) * ppData);
    [propput, id(10)] HRESULT ScalarValue([in] SAFEARRAY(float) pData);
    [propget, id(12)] HRESULT Shader([out, retval] IVoodooShader ** ppShader);
    [propget, id(13)] HRESULT CgParameter([out, retval] VARIANT * pCgParameter);
};

// --------------------------------------------------
// External/plugin interfaces.
//  Only null implementations of these are provided.
// 

[
	object,
	uuid(59C2FE67-A7EC-48B2-982E-9707A3840259),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooAdapter : IDispatch{
    [propget, id(1)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [id(2)] HRESULT LoadPass([in] IVoodooPass * pPass);
    [id(3)] HRESULT UnloadPass([in] IVoodooPass * pPass);
    [propget, id(4)] HRESULT Pass([out, retval] IVoodooPass ** ppPass);
    [propput, id(4)] HRESULT Pass([in] IVoodooPass * pPass);
    [propget, id(6)] HRESULT Target([out, retval] IVoodooTexture ** ppTarget);
    [propput, id(6)] HRESULT Target([in] IVoodooTexture * pTarget);
    [id(8)] HRESULT CreateTexture([in] BSTR pName, [in] TextureDesc Description, [out, retval] IVoodooTexture ** ppTexture);
    [id(9)] HRESULT LoadTexture([in] IVoodooImage * pImage, [in] TextureRegion Region, [out, retval] IVoodooTexture ** ppTexture);
    [id(10)] HRESULT DrawGeometry([in] int Vertexes, [in] SAFEARRAY(VertexStruct) pVertexData);
    [id(11)] HRESULT DrawShader([in] IVoodooShader * pShader);
    [id(12)] HRESULT ApplyParameter([in] IVoodooParameter * pParameter);
    [id(13)] HRESULT SetProperty([in] BSTR pName, [in, out] VARIANT * pData);
    [id(14)] HRESULT ConnectTexture([in] IVoodooParameter * pParameter, [in] IVoodooTexture * pTexture);
    [id(15)] HRESULT HandleError([in] VARIANT pContext, [in] EnumType Error, [in] IVoodooCore * pCore);
};

[
	object,
	uuid(4E25F9D4-87D0-4CE8-84C0-B72225336DA3),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooHookSystem : IDispatch{
    [propget, id(1)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [id(2)] HRESULT Add([in] BSTR pName, [in] FunctionPtr pSource, [in] FunctionPtr pDest);
    [id(3)] HRESULT Remove([in] BSTR pName);
    [id(4)] HRESULT RemoveAll();
};

// Logger interface
[
	object,
	uuid(D26A5521-3E3D-4BD9-8A75-1AD5014D2479),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooLogger : IDispatch{
    [propget, id(1)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [id(2)] HRESULT Open([in] BSTR pFilename, [in] boolean Append);
    [id(3)] HRESULT Close();
    [id(4)] HRESULT Dump();
    [propget, id(5)] HRESULT LogLevel([out, retval] EnumType * pLevel);
    [propput, id(5)] HRESULT LogLevel([in] EnumType Level);
    [id(6)] HRESULT LogModule([in] VersionStruct Module);
    [id(7), vararg] HRESULT Log([in] EnumType Level, [in] BSTR pModule, [in] BSTR pFormat, [in] SAFEARRAY(VARIANT) pArgs);
    [id(8)] HRESULT LogList([in] EnumType Level, [in] BSTR pModule, [in] BSTR pFormat, [in] VARIANT pList);
    [propget, id(9)] HRESULT BufferSize([out, retval] int * pSize);
    [propput, id(9)] HRESULT BufferSize([in] int Size);
};

// FileSystem interfaces
[
	object,
	uuid(2ADFD66B-2C4F-4172-823F-47D480BF8523),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooFileSystem : IDispatch{
    [propget, id(1)] HRESULT Core([out, retval] IVoodooCore ** ppCore);
    [id(2)] HRESULT AddDirectory([in] BSTR pPath);
    [id(3)] HRESULT RemoveDirectory([in] BSTR pPath);
    [id(4)] HRESULT FindFile([in] BSTR pPath, [out, retval] IVoodooFile ** ppFile);
    [id(5)] HRESULT FindImage([in] BSTR pPath, [out, retval] IVoodooImage ** ppImage);
};

[
	object,
	uuid(35068CA2-B06B-48DF-ADAB-BC1FDA163C1F),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooFile : IDispatch{
    [propget, id(1)] HRESULT Path([out, retval] LPBSTR pPath);
    [id(2)] HRESULT Open([in] EnumType Mode);
    [id(3)] HRESULT Close();
    [id(4)] HRESULT Read([in, out] int * Length, [out, size_is(*Length)] byte Buffer[*]);
    [id(5)] HRESULT Write([in] int Length, [in, size_is(Length)] byte Buffer[*]);
};

[
	object,
	uuid(8B74AE58-98A2-4597-B963-4605F03A86D3),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IVoodooImage : IVoodooFile{
    [propget, id(6)] HRESULT Desc([out, retval] TextureDesc * pDesc);
    [propget, id(7)] HRESULT Data([in] TextureRegion Region, [in, out] int * pSize, [out, retval, size_is(*pSize)] byte ppBuffer[*]);
};

// --------------------------------------------------
// Internal Voodoo/Core interfaces and coclasses.
// These MUST NOT compile in external projects.
#ifdef VOODOO_INTERNAL
[
	object,
	uuid(a817e7a2-43fa-11d0-9e44-00aa00b6770a),
	dual,	
	pointer_default(unique)
]
interface IComponentRegistrar : IDispatch
{
	[id(1)]	HRESULT Attach([in] BSTR bstrPath);
	[id(2)]	HRESULT RegisterAll();
	[id(3)]	HRESULT UnregisterAll();
	[id(4)]	HRESULT GetComponents([out] SAFEARRAY(BSTR)* pbstrCLSIDs, [out] SAFEARRAY(BSTR)* pbstrDescriptions);
	[id(5)]	HRESULT RegisterComponent([in] BSTR bstrCLSID);
	[id(6)] HRESULT UnregisterComponent([in] BSTR bstrCLSID);
};

[
	uuid(74838A0A-2645-4638-9AFF-B45ABF5B1365),
	version(0.3),
	custom(a817e7a1-43fa-11d0-9e44-00aa00b6770a,"{5F3D58FE-A84D-4E15-9AAA-878EAC2E4BED}")
]
library Voodoo_Core
{
	importlib("stdole2.tlb");
	[
		uuid(5F3D58FE-A84D-4E15-9AAA-878EAC2E4BED)		
	]
	coclass CompReg
	{
		[default] interface IComponentRegistrar;
	};
	[		
		uuid(C50C9C7D-7E66-40ED-B5FD-BE7135DA40BF)	
	]
	coclass VoodooCore
	{
		[default] interface IVoodooCore;
	};
	[		
		uuid(F4F858F0-C357-4C67-8FB0-9F91AE2DDD4C)		
	]
	coclass VoodooParser
	{
		[default] interface IVoodooParser;
	};
	[		
		uuid(9E6F15CB-5B03-4BD8-9D04-B27D576C3975), noncreatable		
	]
	coclass VoodooShader
	{
		[default] interface IVoodooShader;
	};
	[		
		uuid(1401CE59-BC88-4B38-A34E-0E478CEFD7A8), noncreatable		
	]
	coclass VoodooTechnique
	{
		[default] interface IVoodooTechnique;
	};
	[		
		uuid(9B99881A-821B-4300-8C88-E86FFD787F8B), noncreatable		
	]
	coclass VoodooPass
	{
		[default] interface IVoodooPass;
	};
	[		
		uuid(E2FC29A5-4B54-4720-A3AD-2E86255D2138), noncreatable		
	]
	coclass VoodooTexture
	{
		[default] interface IVoodooTexture;
	};
	[		
		uuid(5190BCB1-B6E5-4611-86B6-C12EF24D6870), noncreatable		
	]
	coclass VoodooParameter
	{
		[default] interface IVoodooParameter;
	};
	[		
		uuid(7C6B6D83-F882-4954-952B-F5689DA3D4D7), noncreatable		
	]
	coclass VoodooLogger
	{
		[default] interface IVoodooLogger;
	};
	[		
		uuid(66063841-6A4E-4D12-A186-5319762EFEB2), noncreatable		
	]
	coclass VoodooAdapter
	{
		[default] interface IVoodooAdapter;
	};
	[		
		uuid(14CC5267-85B7-41B2-A0DC-C69DDEA9E97C), noncreatable		
	]
	coclass VoodooFileSystem
	{
		[default] interface IVoodooFileSystem;
	};
	[		
		uuid(26747ECA-9219-4829-B448-4CD7C46534C0), noncreatable		
	]
	coclass VoodooFile
	{
		[default] interface IVoodooFile;
	};
	[		
		uuid(EAB336C3-CB16-4731-8CD2-A6F691FB5E18), noncreatable		
	]
	coclass VoodooImage
	{
		[default] interface IVoodooImage;
	};
	[		
		uuid(04666805-E086-4104-BCC6-9A0C7FADB924), noncreatable		
	]
	coclass VoodooHookSystem
	{
		[default] interface IVoodooHookSystem;
	};
};
#endif /*VOODOO_INTERNAL*/
