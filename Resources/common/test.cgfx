sampler2D mainTex < string texture = ":thisframe"; >;

struct VertexStruct
{
    float4 pos	 : POSITION;
    float4 color : COLOR0;
    float4 uv    : TEXCOORD0;
    float4 data  : TEXCOORD1;
};

struct ProcessedVertex
{
    float4 pos   : POSITION;
    float4 color : COLOR0;
    float4 uv    : TEXCOORD0;
};

float4 partialInvert(in float2 uv : TEXCOORD0) : COLOR0
{	
    float4 color = tex2D(mainTex, uv);
	color.rb *= sin(uv.rg * 20);
	color.a = 1;
    return color;
}

void copyVert(in VertexStruct ivert, out ProcessedVertex overt)
{
    overt.pos = ivert.pos;
    overt.color = float4(0.0, 1.0, 0.0, 1.0);
    overt.uv = ivert.uv;
}

technique main 
{
    pass sinColor
    {
        //VertexProgram = compile latest copyVert();
        FragmentProgram = compile latest partialInvert();
    }
}
